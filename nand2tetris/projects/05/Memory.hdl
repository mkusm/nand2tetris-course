// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux (in=load, sel=address[14], a=dm1, b=dm2);
    DMux (in=dm2, sel=address[13], a=dm3, b=dm4);
    RAM16K (in=in, load=dm1, address=address[0..13], out=rout);
    Screen (in=in, load=dm3, address=address[0..12], out=sout);
    Keyboard (out=kout);
    Mux16 (a=kout, b=false, sel=address[0],  out=k1);
    Mux16 (a=k1,   b=false, sel=address[1],  out=k2);
    Mux16 (a=k2,   b=false, sel=address[2],  out=k3);
    Mux16 (a=k3,   b=false, sel=address[3],  out=k4);
    Mux16 (a=k4,   b=false, sel=address[4],  out=k5);
    Mux16 (a=k5,   b=false, sel=address[5],  out=k6);
    Mux16 (a=k6,   b=false, sel=address[6],  out=k7);
    Mux16 (a=k7,   b=false, sel=address[7],  out=k8);
    Mux16 (a=k8,   b=false, sel=address[8],  out=k9);
    Mux16 (a=k9,   b=false, sel=address[9],  out=k10);
    Mux16 (a=k10,  b=false, sel=address[10], out=k11);
    Mux16 (a=k11,  b=false, sel=address[11], out=k12);
    Mux16 (a=k12,  b=false, sel=address[12], out=k13);
    Mux16 (a=sout, b=k13,   sel=address[13], out=m1);
    Mux16 (a=rout, b=m1,    sel=address[14], out=out);
}
